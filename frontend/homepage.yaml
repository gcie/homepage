openapi: 3.0.0
paths:
  /auth/login:
    post:
      operationId: login
      summary: ''
      parameters: []
      responses:
        '201':
          description: ''
  /auth/register:
    post:
      operationId: register
      summary: ''
      parameters: []
      responses:
        '201':
          description: ''
  /api/gym/run:
    post:
      operationId: run
      summary: ''
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RunProgramInDto'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RunProgramOutDto'
        '403':
          description: ''
  /api/gym/exercises/add:
    post:
      operationId: addExercise
      summary: ''
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddExerciseInDto'
      responses:
        '201':
          description: Exercise created successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddExerciseOutDto'
        '403':
          description: ''
  /api/gym/exercises/get:
    get:
      operationId: getExercises
      summary: ''
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetExercisesOutDto'
        '403':
          description: ''
  /api/gym/exercises/{exerciseId}/get:
    get:
      operationId: getExercise
      summary: ''
      parameters:
        - name: exerciseId
          required: true
          in: path
          description: Exercise id
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExerciseDto'
        '403':
          description: ''
  /api/gym/exercises/{exerciseId}/testcase/{testcaseId}/run:
    post:
      operationId: runTestcase
      summary: ''
      parameters:
        - name: exerciseId
          required: true
          in: path
          description: Exercise id
          schema:
            type: string
        - name: testcaseId
          required: true
          in: path
          schema:
            type: number
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubmissionInDto'
      responses:
        '200':
          description: Code ran successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RunTestcaseOutDto'
        '400':
          description: ''
        '403':
          description: ''
        '404':
          description: ''
  /api/gym/exercises/{exerciseId}/run:
    post:
      operationId: runTestcases
      summary: ''
      parameters:
        - name: exerciseId
          required: true
          in: path
          description: Exercise id
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubmissionInDto'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RunTestcaseOutDto'
        '400':
          description: ''
        '403':
          description: ''
        '404':
          description: ''
  /api/gym/exercises/{exerciseId}/results:
    get:
      operationId: getExerciseResults
      summary: ''
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResultsDto'
        '403':
          description: ''
  /api/gym/exercises/{exerciseId}/submit:
    post:
      operationId: submitExercise
      summary: ''
      parameters:
        - name: exerciseId
          required: true
          in: path
          description: Exercise id
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubmissionInDto'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: string
        '403':
          description: ''
        '404':
          description: ''
  /api/gym/submissions/{submissionId}:
    get:
      operationId: getSubmission
      summary: ''
      parameters:
        - name: submissionId
          required: true
          in: path
          description: Submission id
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubmissionDto'
        '403':
          description: ''
        '404':
          description: ''
info:
  title: Homepage
  description: My homepage API description
  version: '1.0'
  contact: {}
tags: []
servers: []
components:
  schemas:
    RunProgramInDto:
      type: object
      properties:
        program:
          type: string
      required:
        - program
    Error:
      type: object
      properties: {}
    RunProgramOutDto:
      type: object
      properties:
        stdout:
          type: string
        stderr:
          type: string
        signal:
          type: string
        code:
          type: number
        error:
          $ref: '#/components/schemas/Error'
    TestcaseDto:
      type: object
      properties:
        input:
          type: string
        output:
          type: string
        checker:
          type: string
      required:
        - input
    AddExerciseInDto:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        inputDesc:
          type: string
        outputDesc:
          type: string
        prefix:
          type: string
        suffix:
          type: string
        initialCode:
          type: string
        testcases:
          type: array
          items:
            $ref: '#/components/schemas/TestcaseDto'
        hiddenTestcases:
          type: array
          items:
            $ref: '#/components/schemas/TestcaseDto'
      required:
        - name
        - description
        - inputDesc
        - outputDesc
        - testcases
        - hiddenTestcases
    AddExerciseOutDto:
      type: object
      properties:
        id:
          type: string
      required:
        - id
    ExerciseDescDto:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        score:
          type: number
        maxScore:
          type: number
      required:
        - id
        - name
        - score
        - maxScore
    GetExercisesOutDto:
      type: object
      properties:
        exercises:
          type: array
          items:
            $ref: '#/components/schemas/ExerciseDescDto'
      required:
        - exercises
    TestcaseWithResultDto:
      type: object
      properties:
        input:
          type: string
        output:
          type: string
        checker:
          type: string
        program:
          type: string
        stdout:
          type: string
        stderr:
          type: string
        result:
          type: string
          enum:
            - OK
            - TIMEOUT
            - WRONG_ANSWER
            - ERROR
      required:
        - input
    ExerciseDto:
      type: object
      properties:
        _id:
          type: string
        name:
          type: string
        description:
          type: string
        inputDesc:
          type: string
        outputDesc:
          type: string
        prefix:
          type: string
        suffix:
          type: string
        testcases:
          type: array
          items:
            $ref: '#/components/schemas/TestcaseWithResultDto'
        lastProgram:
          type: string
        maxScore:
          type: number
        score:
          type: number
      required:
        - _id
        - name
        - description
        - inputDesc
        - outputDesc
        - testcases
        - maxScore
        - score
    SubmissionInDto:
      type: object
      properties:
        code:
          type: string
      required:
        - code
    RunTestcaseOutDto:
      type: object
      properties:
        stdout:
          type: string
        stderr:
          type: string
        result:
          type: string
          enum:
            - OK
            - TIMEOUT
            - WRONG_ANSWER
            - ERROR
    TestcaseResultDto:
      type: object
      properties:
        program:
          type: string
        stdout:
          type: string
        stderr:
          type: string
        result:
          type: string
          enum:
            - OK
            - TIMEOUT
            - WRONG_ANSWER
            - ERROR
      required:
        - program
    ResultsDto:
      type: object
      properties:
        testcaseResults:
          type: array
          items:
            $ref: '#/components/schemas/TestcaseResultDto'
        lastProgram:
          type: string
      required:
        - testcaseResults
    SubmissionDto:
      type: object
      properties:
        program:
          type: string
        status:
          type: string
          enum:
            - WAITING
            - RUNNING
            - OK
            - TIMEOUT
            - WRONG_ANSWER
            - ERROR
        atTestcase:
          type: number
      required:
        - program
        - status
